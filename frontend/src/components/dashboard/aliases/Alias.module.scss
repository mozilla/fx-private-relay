@import "../../../styles/tokens.scss";
@import "~@mozilla-protocol/core/protocol/css/includes/lib";

$toggleTransitionDuration: 200ms;

.alias-card {
  border-radius: $border-radius-md;
  padding: 0;
  transition: background-color $toggleTransitionDuration ease,
    box-shadow $toggleTransitionDuration ease;
  background-size: cover;
  background-position: top;

  &.is-enabled {
    box-shadow: $box-shadow-sm;
    background-color: $color-white;
  }

  &.is-disabled {
    background-color: rgba($color-white, 0.5);
  }
}

.main-data {
  display: flex;
  gap: $spacing-xs;
  padding: $spacing-md;
}

.controls {
  min-width: $content-xs;
  display: flex;
  gap: $spacing-xs;
  align-items: center;
  flex-wrap: wrap;
}

$trackerRemovalIndicatorWidth: 20px;
.tracker-removal-indicator-wrapper {
  position: relative;
  width: $trackerRemovalIndicatorWidth;

  button {
    border-style: none;
    background-color: transparent;
    color: $color-grey-30;
    display: flex;
    align-items: center;
    padding: 0 $spacing-xs;
  }

  $arrowWidth: 6px;
  .tracker-removal-indicator-tooltip {
    position: absolute;
    box-shadow: $box-shadow-sm;
    padding: $spacing-md;
    background-color: $color-white;
    border-radius: $border-radius-md;
    width: $content-xs;
    top: calc(-50% - $spacing-md / 2);
    left: $trackerRemovalIndicatorWidth + $spacing-sm + $arrowWidth;
    // Overlap <LabelEditor>, which is relatively positioned:
    z-index: 1;

    &::before {
      content: "";
      height: $arrowWidth * 2;
      width: $arrowWidth * 2;
      position: absolute;
      top: calc(50% - $arrowWidth);
      left: $arrowWidth * -1;
      transform: rotate(45deg);
      background-color: $color-white;
    }
  }
}

.label-editor-wrapper {
  flex: 1 0 auto;
  // Grows to push the mask address to the next line when present,
  // but not so much to push itself down below the
  // `.tracker-removal-indicator-wrapper` if present:
  width: calc(100% - $trackerRemovalIndicatorWidth - $spacing-xs);
}

.copy-controls {
  display: flex;
  align-items: center;
  overflow: hidden;
}

.copy-button-wrapper {
  position: relative;
  width: 100%;

  .copy-button {
    @include text-body-lg;
    display: flex;
    align-items: center;
    background-color: transparent;
    border: 2px solid transparent;
    border-radius: $border-radius-md;
    cursor: pointer;
    padding: 0 $spacing-sm;
    width: 100%;
    flex-basis: 0;

    &:focus-visible {
      // For some reason (presumably related to `.copy-button-wrapper`'s
      // relative positioning), Protocol's default outline isn't visible by
      // default. Thus, we add a focus style using a border, and then remove the
      // remnants of the outline that are made visible when there's a border.
      border-color: $color-blue-50;
      outline: none;
    }

    .address {
      font-family: $font-stack-firefox;
      overflow: hidden;
      text-overflow: ellipsis;
      display: inline-block;
      text-align: start;
      flex-grow: 0;
      flex-shrink: 1;
    }

    .copy-icon {
      padding: 0 $spacing-sm;
      opacity: 0.5;
      display: inline-block;
      flex-grow: 2;
      flex-shrink: 0;
      max-width: $layout-sm;
      color: $color-light-gray-90;
    }

    &:hover {
      .address {
        text-decoration: underline;
      }

      .copy-icon {
        opacity: 1;
      }
    }
  }

  .copied-confirmation {
    opacity: 0;
    pointer-events: none;
    transition: opacity 2s;
    background-color: $color-violet-30;
    color: $color-white;
    border-radius: $border-radius-md;
    padding: 0 $spacing-xs;
    // By allowing this to overlap other elements,
    // we don't need to reserve empty space for it.
    // Otherwise, this empty space would push the
    // .expand-toggle out of the card on small screens:
    position: absolute;
    left: $spacing-xs;
    top: 0;

    &.is-shown {
      pointer-events: auto;
      opacity: 1;
      // Don't fade in when appearing:
      transition: opacity 0s;
    }
  }
}

.block-level-label-wrapper {
  display: none;
  align-items: center;
  flex: 1 0 auto;

  @media screen and #{$mq-md} {
    display: flex;
  }

  .block-level-label {
    @include text-body-sm;
    border: 2px solid transparent;
    border-radius: $border-radius-sm;
    padding: $spacing-sm;
    font-weight: 600;
    flex: 1 0 auto;
    text-align: center;

    &.block-level-all-label {
      color: $color-light-gray-70;
      border-color: $color-light-gray-40;
    }

    &.block-level-promotional-label {
      color: $color-yellow-50;
      border-color: $color-yellow-40;
    }
  }
}

.alias-stats {
  .main-data & {
    display: none;
  }
  .secondary-data & {
    display: flex;
  }

  @media screen and #{$mq-lg} {
    // I've grouped these together under the media query to emphasise that they
    // switch visibility at the same time:
    // stylelint-disable-next-line no-duplicate-selectors
    .main-data & {
      display: flex;
      flex: 0 0 0;
      text-align: center;
    }
    // I've grouped these together under the media query to emphasise that they
    // switch visibility at the same time:
    // stylelint-disable-next-line no-duplicate-selectors
    .secondary-data & {
      display: none;
    }
  }

  .stat-wrapper {
    position: relative;

    $arrowWidth: 6px;
    .tooltip {
      @include text-body-sm;
      position: absolute;
      width: $content-sm;
      max-width: calc(100% - 2 * $spacing-xs);
      top: calc(100% + $arrowWidth + $spacing-xs);
      right: $spacing-xs;
      background-color: $color-light-gray-10;
      border: 1px solid $color-light-gray-30;
      box-shadow: $box-shadow-sm;
      display: flex;
      flex-direction: column;
      gap: $spacing-sm;
      padding: $spacing-sm $spacing-md;
      border-radius: $border-radius-sm;
      // Prevent other .stat-wrapper elements from overlapping this tooltip:
      z-index: 2;

      @media screen and #{$mq-lg} {
        // The wrapper doesn't span the full width on large screens,
        // so limiting the tooltip to its wrapper's size makes it too thin:
        max-width: unset;
      }

      &::before {
        content: "";
        height: 2 * $arrowWidth;
        width: 2 * $arrowWidth;
        position: absolute;
        top: -1 * $arrowWidth;
        right: $spacing-xl;
        transform: rotate(45deg);
        background-color: $color-light-gray-10;
        border-top: 1px solid $color-light-gray-30;
        border-left: 1px solid $color-light-gray-30;
      }
    }
  }

  // These are separated out from the earlier instance of this selector,
  // to make sure that the regular styles do not obfuscate the aligned
  // visibility states of `.alias-stats` when in `.main-data` and when in
  // `.secondary-data`:
  // stylelint-disable-next-line no-duplicate-selectors
  .main-data & {
    .stat-wrapper {
      display: flex;
      align-items: center;
    }

    .stat {
      display: flex;
      flex-direction: column;
      align-items: center;
      justify-content: center;
      padding: 0 $spacing-md;
      transition: opacity $toggleTransitionDuration ease;

      .number {
        @include text-body-xl;
        font-family: $font-stack-firefox;
        font-weight: 700;
      }

      .label {
        @include text-body-sm;
        line-height: 1.2;
        height: 25px;
        display: flex;
        align-items: center;
        word-break: keep-all;
      }

      // De-emphasise stats for:
      // - blocked emails when a mask is not blocking emails,
      .is-enabled.is-not-blocking-promotionals &.blocked-stat,
      // - replies when a mask is not passing through replies,
      .is-disabled &.replies-stat,
      // - tracker removal when a mask is not removing trackers, and
      .is-enabled.is-not-removing-trackers &.trackers-removed-stat,
      .is-disabled &.trackers-removed-stat,
      // - forwarded emails when a mask is not forwarding emails.
      .is-disabled &.forwarded-stat {
        opacity: 0.3;
      }
    }
  }

  // These are separated out from the earlier instance of this selector,
  // to make sure that the regular styles do not obfuscate the aligned
  // visibility states of `.alias-stats` when in `.main-data` and when in
  // `.secondary-data`:
  // stylelint-disable-next-line no-duplicate-selectors
  .secondary-data & {
    flex-direction: column;

    .stat {
      width: 100%;
      display: flex;
      flex-direction: row-reverse;
      padding: $spacing-sm $spacing-md;
      border-bottom: 1px solid $color-light-gray-20;
      color: $color-marketing-gray-99;

      .label {
        flex: 1 0 auto;
        font-weight: 500;
      }

      .number {
        font-weight: 700;
      }
    }
  }
}

.expand-toggle {
  flex: 0 0 auto;
  display: flex;
  align-items: center;

  button {
    background-color: transparent;
    border-style: none;
    padding: $spacing-sm;
    border-radius: $border-radius-sm;
    color: $color-dark-gray-50;
    cursor: pointer;

    svg {
      transition: transform 200ms;

      .is-expanded & {
        transform: rotate(0.5turn);
      }
    }
  }
}

.secondary-data {
  max-height: 0;
  overflow: hidden;
  border-top: 1px solid transparent;
  transition: max-height 200ms, border-color 200ms, padding 200ms;
  display: flex;
  flex-direction: column;
  gap: $spacing-md;
  // Make sure hidden elements are unfocusable:
  visibility: hidden;

  .is-expanded & {
    // An arbitrary high value that allows it to expand to its full height:
    max-height: 1000vh;
    border-color: $color-light-gray-20;
    padding: $spacing-sm 0;
    visibility: visible;
  }

  .row {
    display: flex;
    flex-direction: column;
    gap: $spacing-md;
    padding-inline: $spacing-md;
    padding-bottom: $spacing-md;
    border-bottom: 1px solid $color-light-gray-20;

    &:last-child {
      border-bottom-style: none;
      padding-bottom: 0;
    }

    dl {
      flex-grow: 2;
      display: flex;
      gap: $spacing-sm;
      flex-direction: column;

      @media screen and #{$mq-md} {
        flex-direction: row;
        gap: $spacing-xl;
      }

      dt {
        @include text-body-xs;
        color: $color-dark-gray-05;
      }
    }

    @media screen and #{$mq-md} {
      flex-direction: row;

      .metadata {
        $metadataIconSize: 24px;
        background-repeat: no-repeat;
        background-position: left center;
        background-size: $metadataIconSize $metadataIconSize;
        padding-left: calc($metadataIconSize + $spacing-md);
      }

      .forward-target {
        background-image: url("/icons/email.svg");
      }

      .date-created {
        background-image: url("/icons/calendar.svg");
      }
    }
  }
}
