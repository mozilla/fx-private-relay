@import "~@mozilla-protocol/core/protocol/css/includes/tokens/dist/index.scss";
@import "~@mozilla-protocol/core/protocol/css/includes/lib";
@import "~@mozilla-protocol/core/protocol/css/includes/forms/lib";

.controls {
  display: grid;
  grid-template-columns: 1fr auto auto;
  row-gap: $spacing-md;
  grid-template-areas:
    "categoryFilter newAliasButton"
    "stringFilter stringFilter";
  align-items: center;
  padding: $spacing-md 0;
  // The focus indicators of contained elements can overflow:
  overflow: visible;

  .string-filter {
    grid-area: stringFilter;
  }

  .category-filter {
    grid-area: categoryFilter;
  }

  .new-alias-button {
    grid-area: newAliasButton;
  }

  @media screen and #{$mq-md} {
    grid-template-areas: "stringFilter categoryFilter newAliasButton";
  }
}

.alias-card-wrapper {
  padding-top: $spacing-lg;
  list-style-type: none;

  &:first-child {
    padding-top: 0;
  }
}

.string-filter {
  input {
    @include form-input;
    margin: 0;
    background-image: url("/icons/search-blue.svg");
    background-repeat: no-repeat;
    background-position: left $spacing-sm top 50%;
    // The search icon is 20px wide, surrounded by padding:
    padding-left: calc($spacing-sm + 20px + $spacing-sm);
    // Leave some space on the right for `.match-count`
    padding-right: calc($spacing-sm + 30px);
    width: 100%;

    @media screen and #{$mq-md} {
      width: auto;
    }
  }

  .match-count {
    opacity: 0;
    transition: opacity 200ms;
    position: absolute;
    transform: translateX(-100%);
    padding: $spacing-sm;
  }
  // Show the counter when the search field is focused
  // or has a value:
  input:not(:placeholder-shown) + .match-count,
  input:focus + .match-count {
    opacity: 1;
  }
}

.category-filter {
  padding-right: $spacing-md;
}

.empty-state-message {
  background-color: $color-white;
  border-radius: $border-radius-md;
  padding: $spacing-lg;

  .clear-filters-button {
    background-color: transparent;
    border-style: none;
    color: $color-blue-50;
    text-decoration: underline;
    cursor: pointer;

    &:hover {
      color: $color-blue-40;
    }
  }
}

.stale-wrapper {
  .stale-toggle-button {
    display: block;
    width: 100%;
    cursor: pointer;
    background-color: transparent;
    border-style: none;
    text-align: center;
    padding: $spacing-lg;
    color: $color-dark-gray-10;
    $lineWidth: 2px;
    background-image: linear-gradient(
      to bottom,
      transparent,
      transparent calc(50% - ($lineWidth / 2)),
      $color-light-gray-30 calc(50% - ($lineWidth / 2)),
      $color-light-gray-30 calc(50% + ($lineWidth / 2)),
      transparent calc(50% + ($lineWidth / 2))
    );

    span {
      display: inline-flex;
      gap: $spacing-xs;
      align-items: center;
      background-color: $color-light-gray-10;
      padding: 0 $spacing-xl;

      img {
        display: inline-block;
        transition: transform 200ms;
      }
    }
  }

  .stale-aliases {
    display: flex;
    flex-direction: column;
    height: 0;
    // `visibility` and `overflow` are needed to prevent the hidden element
    // from taking up space on the page (resulting in white space below the footer):
    visibility: collapse;
    overflow: hidden;
    opacity: 0;
    transition: opacity 400ms, height 400ms;
  }

  &.is-expanded {
    .stale-toggle-button img {
      transform: rotate(180deg);
    }

    .stale-aliases {
      overflow: initial;
      height: auto;
      visibility: visible;
      opacity: 1;
    }
  }
}
